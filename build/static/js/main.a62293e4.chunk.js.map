{"version":3,"sources":["reducers/actions.ts","utils/check-grid/index.ts","utils/compare-arrays/index.ts","utils/copy-grid/index.ts","utils/create-full-grid/index.ts","utils/fill-grid/index.ts","utils/get-random-index/index.ts","utils/identify-square/index.ts","utils/is-in/col/index.ts","utils/is-in/row/index.ts","utils/is-in/square/index.ts","global/index.ts","utils/remove-numbers/index.ts","utils/shuffle/index.ts","utils/solve-grid/index.ts","reducers/reducer.ts","reducers/index.ts","serviceWorkerRegistration.ts","components/grid/block/styles/index.ts","components/grid/block/index.tsx","components/grid/styles/index.ts","components/grid/index.tsx","components/new-button/index.tsx","components/numbers/button/index.tsx","components/numbers/styles/index.ts","components/numbers/index.tsx","components/styles/button/index.ts","components/styles/card/index.ts","components/styles/content/index.ts","components/styles/title/index.ts","core/configure-store/index.ts","styles/global.ts","index.tsx","styles/theme.ts","reducers/types.ts"],"names":["createGrid","type","types","fillBlock","value","coords","selectBlock","checkGrid","grid","i","j","compareArrays","arr1","arr2","Array","isArray","length","len","copyGrid","gridCopy","r","c","createFullGrid","fillGrid","numbers","row","col","Math","floor","shuffle","isInRow","isInCol","square","identifySquare","isInSquare","getRandomIndex","random","identifyWorkingSquare","x","push","includes","counter","removeNumbers","attempts","backup","global","solveGrid","array","initialState","reducer","state","action","solvedGrid","challengeGrid","workingGrid","alert","selectedBlock","Boolean","window","location","hostname","match","Container","styled","div","active","puzzle","theme","css","colors","blue","white","black","transition","lightBlue","Block","colIndex","rowIndex","useSelector","isActive","isPuzzle","dispatch","useDispatch","data-cy","onClick","Row","Grid","selectedValue","create","useCallback","fill","n","useMousetrap","useEffect","Children","toArray","map","_","NewButton","createNewGrid","confirm","Button","NumberButton","Numbers","button","Card","Content","Title","h1","persistConfig","key","storage","persistedReducer","persistReducer","configureStore","store","createStore","devToolsEnhancer","persistor","persistStore","createGlobalStyle","background","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","CREATE_GRID","FILL_BLOCK","SELECT_BLOCK"],"mappings":"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","file":"static/js/main.a62293e4.chunk.js","sourcesContent":["import { Action, AnyAction } from 'redux'\r\n\r\nimport { BLOCK_COORDS, NUMBERS } from 'typings'\r\n\r\nimport * as types from './types'\r\n\r\nexport const createGrid = (): Action => ({ type: types.CREATE_GRID })\r\n\r\nexport const fillBlock = (value: NUMBERS, coords: BLOCK_COORDS): AnyAction => ({\r\n  coords,\r\n  type: types.FILL_BLOCK,\r\n  value,\r\n})\r\n\r\nexport const selectBlock = (coords: BLOCK_COORDS): AnyAction => ({\r\n  coords,\r\n  type: types.SELECT_BLOCK,\r\n})\r\n","import { GRID } from 'typings'\r\n\r\n/**\r\n * A function to check if the grid is full\r\n * @param grid A 9X9 Sudoku Grid\r\n */\r\nfunction checkGrid(grid: GRID): boolean {\r\n  for (let i = 0; i < 9; i++)\r\n    for (let j = 0; j < 9; j++) if (grid[i][j] === 0) return false\r\n  return true\r\n}\r\n\r\nexport default checkGrid\r\n","/**\r\n * Compares two arrays (of any dimensions) and returns true if they are equal, other returns false\r\n * @param arr1 first array to be compared\r\n * @param arr2 second array to be compared\r\n */\r\nfunction compareArrays(arr1: any[], arr2: any[]): boolean {\r\n  if (!Array.isArray(arr1) && !Array.isArray(arr2)) return arr1 === arr2\r\n\r\n  if (arr1.length !== arr2.length) return false\r\n\r\n  for (let i = 0, len = arr1.length; i < len; i++)\r\n    if (!compareArrays(arr1[i], arr2[i])) return false\r\n\r\n  return true\r\n}\r\n\r\nexport default compareArrays\r\n","import { GRID, INDEX } from 'typings'\r\n\r\nfunction copyGrid(grid: GRID): GRID {\r\n  const gridCopy: GRID = [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  ]\r\n\r\n  for (let r: INDEX = 0; r < 9; r++)\r\n    for (let c: INDEX = 0; c < 9; c++) gridCopy[r][c] = grid[r][c]\r\n\r\n  return gridCopy\r\n}\r\n\r\nexport default copyGrid\r\n","import { GRID } from 'typings'\r\nimport { fillGrid } from 'utils'\r\n\r\n/**\r\n * A function to create a full valid sudoku grid\r\n */\r\nfunction createFullGrid(): GRID {\r\n  const grid: GRID = [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  ]\r\n  fillGrid(grid)\r\n  return grid\r\n}\r\n\r\nexport default createFullGrid\r\n","import { GRID, NUMBERS } from 'typings'\r\nimport {\r\n  checkGrid,\r\n  identifySquare,\r\n  isInCol,\r\n  isInRow,\r\n  isInSquare,\r\n  shuffle,\r\n} from 'utils'\r\n\r\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n\r\n/**\r\n * A backtracking/recursive function to check all the possible combinations of numbers a solution is found\r\n * @param grid  9X9 Sudoku Grid\r\n */\r\nfunction fillGrid(grid: GRID) {\r\n  let row = 0\r\n  let col = 0\r\n\r\n  for (let i = 0; i < 81; i++) {\r\n    row = Math.floor(i / 9)\r\n    col = i % 9\r\n\r\n    if (grid[row][col] === 0) {\r\n      shuffle(numbers)\r\n\r\n      for (let value of numbers) {\r\n        if (!isInRow({ grid, row, value }))\r\n          if (!isInCol({ col, grid, value })) {\r\n            const square = identifySquare({ col, grid, row })\r\n            if (!isInSquare({ square, value })) {\r\n              grid[row][col] = value\r\n              if (checkGrid(grid)) return true\r\n              else if (fillGrid(grid)) return true\r\n            }\r\n          }\r\n      }\r\n\r\n      break\r\n    }\r\n  }\r\n\r\n  grid[row][col] = 0\r\n}\r\n\r\nexport default fillGrid\r\n","/**\r\n * Return a random sudokue grid index in the 0 = 8 range\r\n */\r\nfunction getRandomIndex() {\r\n  return Math.floor(Math.random() * Math.floor(9))\r\n}\r\n\r\nexport default getRandomIndex\r\n","import { GRID, SQUARE } from 'typings'\r\n\r\ninterface IInput {\r\n  grid: GRID\r\n  row: number\r\n  col: number\r\n}\r\n\r\n/**\r\n * A function that identifies and returns the current square of a given sudoku grid at a row and column index.\r\n * @param input Object with 9X9 Sudoku Grid, row index and column index\r\n */\r\nfunction identifyWorkingSquare({ col, grid, row }: IInput): SQUARE {\r\n  const square = []\r\n  if (row < 3) {\r\n    if (col < 3)\r\n      for (let x = 0; x < 3; x++)\r\n        square.push([grid[x][0], grid[x][1], grid[x][2]])\r\n    else if (col < 6)\r\n      for (let x = 0; x < 3; x++)\r\n        square.push([grid[x][3], grid[x][4], grid[x][5]])\r\n    else\r\n      for (let x = 0; x < 3; x++)\r\n        square.push([grid[x][6], grid[x][7], grid[x][8]])\r\n  } else if (row < 6) {\r\n    if (col < 3)\r\n      for (let x = 3; x < 6; x++)\r\n        square.push([grid[x][0], grid[x][1], grid[x][2]])\r\n    else if (col < 6)\r\n      for (let x = 3; x < 6; x++)\r\n        square.push([grid[x][3], grid[x][4], grid[x][5]])\r\n    else\r\n      for (let x = 3; x < 6; x++)\r\n        square.push([grid[x][6], grid[x][7], grid[x][8]])\r\n  } else {\r\n    if (col < 3)\r\n      for (let x = 6; x < 9; x++)\r\n        square.push([grid[x][0], grid[x][1], grid[x][2]])\r\n    else if (col < 6)\r\n      for (let x = 6; x < 9; x++)\r\n        square.push([grid[x][3], grid[x][4], grid[x][5]])\r\n    else\r\n      for (let x = 6; x < 9; x++)\r\n        square.push([grid[x][6], grid[x][7], grid[x][8]])\r\n  }\r\n\r\n  return square as SQUARE\r\n}\r\n\r\nexport default identifyWorkingSquare\r\n","import { GRID, NUMBERS } from 'typings'\r\n\r\ninterface IInput {\r\n  col: number\r\n  grid: GRID\r\n  value: NUMBERS\r\n}\r\n\r\n/**\r\n * A function that returns true if the value is already being used in the current grid column.\r\n * @param input Object with 9X9 Sudoku Grid, column index and value.\r\n */\r\nfunction isInCol({ col, grid, value }: IInput): boolean {\r\n  for (let i = 0; i < 9; i++) if (value === grid[i][col]) return true\r\n  return false\r\n}\r\n\r\nexport default isInCol\r\n","import { GRID, NUMBERS } from 'typings'\r\n\r\ninterface IInput {\r\n  grid: GRID\r\n  row: number\r\n  value: NUMBERS\r\n}\r\n\r\n/**\r\n * A function that returns true if the value is already being used in the current grid row.\r\n * @param input Object with 9x9 Sudoku Grid, row index and value\r\n */\r\nfunction isInRow({ grid, row, value }: IInput): boolean {\r\n  return grid[row].includes(value)\r\n}\r\n\r\nexport default isInRow\r\n","import { NUMBERS, SQUARE } from 'typings'\r\n\r\ninterface IInput {\r\n  square: SQUARE\r\n  value: NUMBERS\r\n}\r\n\r\n/**\r\n * A function that returns true if the value is already being used in the current grid square.\r\n * @param input Object with 3X# Square and value.\r\n */\r\nfunction isInSquare({ square, value }: IInput): boolean {\r\n  return [...square[0], ...square[1], ...square[2]].includes(value)\r\n}\r\n\r\nexport default isInSquare\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  counter: 0,\r\n}\r\n","import global from 'global'\r\nimport { GRID } from 'typings'\r\nimport { copyGrid, getRandomIndex, solveGrid } from 'utils'\r\n\r\n/**\r\n * Removes numbers from a full grid to create a Sudoku Puzzle.\r\n * @param grid 9X9 Sudoku Grid\r\n * @param attempts number of attempts to solve (higher means more difficult) - default 5\r\n */\r\nfunction removeNumbers(grid: GRID, attempts = 5): GRID {\r\n  while (attempts > 0) {\r\n    let row = getRandomIndex()\r\n    let col = getRandomIndex()\r\n\r\n    while (grid[row][col] === 0) {\r\n      row = getRandomIndex()\r\n      col = getRandomIndex()\r\n    }\r\n\r\n    const backup = grid[row][col]\r\n    grid[row][col] = 0\r\n\r\n    const gridCopy = copyGrid(grid)\r\n\r\n    global.counter = 0\r\n    solveGrid(gridCopy)\r\n\r\n    if (global.counter !== 1) {\r\n      grid[row][col] = backup\r\n      attempts--\r\n    }\r\n  }\r\n\r\n  return grid\r\n}\r\n\r\nexport default removeNumbers\r\n","/**\r\n * An array shuffling using the Fisher-Yates shuffle alogrithm\r\n * @param array An array that you want shuffled\r\n */\r\nfunction shuffle(array: any[]) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1))\r\n    ;[array[i], array[j]] = [array[j], array[i]]\r\n  }\r\n}\r\n\r\nexport default shuffle\r\n","import global from 'global'\r\nimport { GRID, NUMBERS } from 'typings'\r\nimport { checkGrid, identifySquare, isInCol, isInRow, isInSquare } from 'utils'\r\n\r\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n\r\n/**\r\n * A backtracking/recursive function to check all possible combinations of numbers until a solution is found\r\n * @param grid A 9X9 array consisting of values from 0-9)\r\n */\r\nfunction solveGrid(grid: GRID) {\r\n  let row = 0\r\n  let col = 0\r\n\r\n  for (let i = 0; i < 81; i++) {\r\n    row = Math.floor(i / 9)\r\n    col = i % 9\r\n\r\n    if (grid[row][col] === 0) {\r\n      for (let value of numbers)\r\n        if (!isInRow({ grid, row, value }))\r\n          if (!isInCol({ col, grid, value })) {\r\n            const square = identifySquare({ col, grid, row })\r\n            if (!isInSquare({ square, value })) {\r\n              grid[row][col] = value\r\n              if (checkGrid(grid)) {\r\n                global.counter++\r\n                break\r\n              } else if (solveGrid(grid)) return true\r\n            }\r\n          }\r\n      break\r\n    }\r\n  }\r\n\r\n  grid[row][col] = 0\r\n}\r\n\r\nexport default solveGrid\r\n","import { AnyAction } from 'redux'\r\n\r\nimport { GRID } from 'typings'\r\nimport { compareArrays, copyGrid, createFullGrid, removeNumbers } from 'utils'\r\n\r\nimport { IReducer } from './interfaces'\r\nimport * as types from './types'\r\n\r\nconst initialState: IReducer = {}\r\n\r\nfunction reducer(state = initialState, action: AnyAction): IReducer {\r\n  switch (action.type) {\r\n    case types.CREATE_GRID: {\r\n      const solvedGrid = createFullGrid()\r\n      const gridCopy = copyGrid(solvedGrid)\r\n      const challengeGrid = removeNumbers(gridCopy)\r\n      const workingGrid = copyGrid(challengeGrid)\r\n      return {\r\n        ...state,\r\n        challengeGrid,\r\n        solvedGrid,\r\n        workingGrid,\r\n      }\r\n    }\r\n\r\n    case types.FILL_BLOCK: {\r\n      if (state.workingGrid && state.solvedGrid) {\r\n        if (\r\n          state.solvedGrid[action.coords[0]][action.coords[1]] !== action.value\r\n        ) {\r\n          alert('Incorrect Option!')\r\n          return state\r\n        }\r\n        state.workingGrid[action.coords[0]][action.coords[1]] = action.value\r\n        if (compareArrays(state.workingGrid, state.solvedGrid))\r\n          alert('Completed!')\r\n        return { ...state, workingGrid: [...state.workingGrid] as GRID }\r\n      }\r\n      return state\r\n    }\r\n\r\n    case types.SELECT_BLOCK:\r\n      return { ...state, selectedBlock: action.coords }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import reducer from './reducer'\r\n\r\nexport * from './actions'\r\nexport * from './interfaces'\r\n\r\nexport type IReducer = ReturnType<typeof reducer>\r\nexport default reducer\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import styled, { css } from 'styled-components'\r\n\r\ninterface IProps {\r\n  active?: boolean\r\n  puzzle?: boolean\r\n}\r\n\r\nexport const Container = styled.div<IProps>`\r\n  ${({ active, puzzle, theme }) => css`\r\n    align-items: center;\r\n    background-color: ${active ? theme.colors.blue : theme.colors.white};\r\n    border: solid 1px ${theme.colors.black};\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-grow: 1;\r\n    flex-shrink: 0;\r\n    flex-basis: 0;\r\n    font-size: 20px;\r\n    font-weight: ${puzzle ? 'bold' : 'normal'};\r\n    height: auto;\r\n    justify-content: center;\r\n    transition: ${theme.transition};\r\n    user-select: none;\r\n\r\n    &:before {\r\n      padding-top: 100%;\r\n      content: '';\r\n      float: left;\r\n    }\r\n\r\n    &:hover {\r\n      background-color: ${theme.colors.lightBlue};\r\n    }\r\n  `}\r\n`\r\n","import React, { FC } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Dispatch, AnyAction } from 'redux'\r\n\r\nimport { IReducer, selectBlock } from 'reducers'\r\nimport { N, INDEX } from 'typings'\r\n\r\nimport { Container } from './styles'\r\n\r\ninterface IProps {\r\n  colIndex: INDEX\r\n  rowIndex: INDEX\r\n}\r\n\r\ninterface IState {\r\n  isActive: boolean\r\n  isPuzzle: boolean\r\n  value: N\r\n}\r\n\r\nconst Block: FC<IProps> = ({ colIndex, rowIndex }) => {\r\n  const state = useSelector<IReducer, IState>(\r\n    ({ challengeGrid, selectedBlock, workingGrid }) => ({\r\n      isActive: selectedBlock\r\n        ? selectedBlock[0] === rowIndex && selectedBlock[1] === colIndex\r\n        : false,\r\n      isPuzzle:\r\n        challengeGrid && challengeGrid[rowIndex][colIndex] !== 0 ? true : false,\r\n      value: workingGrid ? workingGrid[rowIndex][colIndex] : 0,\r\n    })\r\n  )\r\n  const dispatch = useDispatch<Dispatch<AnyAction>>()\r\n\r\n  function handleClick() {\r\n    if (!state.isActive) dispatch(selectBlock([rowIndex, colIndex]))\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      active={state.isActive}\r\n      data-cy={`block-${rowIndex}-${colIndex}`}\r\n      onClick={handleClick}\r\n      puzzle={state.isPuzzle}\r\n    >\r\n      {state.value === 0 ? '' : state.value}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Block\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 0;\r\n`\r\n\r\nexport const Row = styled.div`\r\n  ${({ theme }) => css`\r\n    display: flex;\r\n    flex-flow: row;\r\n\r\n    &:nth-child(1) {\r\n      div {\r\n        border-top: solid 4px ${theme.colors.black};\r\n      }\r\n    }\r\n    &:nth-child(3),\r\n    &:nth-child(6) {\r\n      div {\r\n        border-bottom: solid 3px ${theme.colors.black};\r\n      }\r\n    }\r\n    &:nth-child(9) {\r\n      border-bottom: solid 4px ${theme.colors.black};\r\n    }\r\n\r\n    div {\r\n      &:nth-child(1) {\r\n        border-left: solid 4px ${theme.colors.black};\r\n      }\r\n      &:nth-child(3),\r\n      &:nth-child(6),\r\n      &:nth-child(9) {\r\n        border-right: solid 4px ${theme.colors.black};\r\n      }\r\n      &:nth-child(4),\r\n      &:nth-child(7) {\r\n        border-left: none;\r\n      }\r\n    }\r\n  `}\r\n`\r\n","import React, { FC, Children, useCallback, useEffect } from 'react'\r\nimport useMousetrap from 'react-hook-mousetrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AnyAction, Dispatch } from 'redux'\r\n\r\nimport { createGrid, IReducer, selectBlock, fillBlock } from 'reducers'\r\nimport { BLOCK_COORDS, GRID, INDEX, N, NUMBERS } from 'typings'\r\n\r\nimport Block from './block'\r\nimport { Container, Row } from './styles'\r\n\r\ninterface IState {\r\n  selectedBlock?: BLOCK_COORDS\r\n  selectedValue: N\r\n  solvedGrid?: GRID\r\n}\r\n\r\nconst Grid: FC = () => {\r\n  const state = useSelector<IReducer, IState>(\r\n    ({ selectedBlock, solvedGrid, workingGrid }) => ({\r\n      selectedBlock,\r\n      selectedValue:\r\n        workingGrid && selectedBlock\r\n          ? workingGrid[selectedBlock[0]][selectedBlock[1]]\r\n          : 0,\r\n      solvedGrid,\r\n    })\r\n  )\r\n  const dispatch = useDispatch<Dispatch<AnyAction>>()\r\n\r\n  const create = useCallback(() => dispatch(createGrid()), [dispatch])\r\n\r\n  const fill = useCallback(\r\n    (n: NUMBERS) => {\r\n      if (state.selectedBlock && state.selectedValue === 0)\r\n        dispatch(fillBlock(n, state.selectedBlock))\r\n    },\r\n    [dispatch, state.selectedBlock, state.selectedValue]\r\n  )\r\n\r\n  function moveDown() {\r\n    if (state.selectedBlock && state.selectedBlock[0] < 8)\r\n      dispatch(\r\n        selectBlock([\r\n          (state.selectedBlock[0] + 1) as INDEX,\r\n          state.selectedBlock[1],\r\n        ])\r\n      )\r\n  }\r\n\r\n  function moveLeft() {\r\n    if (state.selectedBlock && state.selectedBlock[1] > 0)\r\n      dispatch(\r\n        selectBlock([\r\n          state.selectedBlock[0],\r\n          (state.selectedBlock[1] - 1) as INDEX,\r\n        ])\r\n      )\r\n  }\r\n\r\n  function moveRight() {\r\n    if (state.selectedBlock && state.selectedBlock[1] < 8)\r\n      dispatch(\r\n        selectBlock([\r\n          state.selectedBlock[0],\r\n          (state.selectedBlock[1] + 1) as INDEX,\r\n        ])\r\n      )\r\n  }\r\n\r\n  function moveUp() {\r\n    if (state.selectedBlock && state.selectedBlock[0] > 0)\r\n      dispatch(\r\n        selectBlock([\r\n          (state.selectedBlock[0] - 1) as INDEX,\r\n          state.selectedBlock[1],\r\n        ])\r\n      )\r\n  }\r\n\r\n  useMousetrap('1', () => fill(1))\r\n  useMousetrap('2', () => fill(2))\r\n  useMousetrap('3', () => fill(3))\r\n  useMousetrap('4', () => fill(4))\r\n  useMousetrap('5', () => fill(5))\r\n  useMousetrap('6', () => fill(6))\r\n  useMousetrap('7', () => fill(7))\r\n  useMousetrap('8', () => fill(8))\r\n  useMousetrap('9', () => fill(9))\r\n  useMousetrap('down', moveDown)\r\n  useMousetrap('left', moveLeft)\r\n  useMousetrap('right', moveRight)\r\n  useMousetrap('up', moveUp)\r\n\r\n  useEffect(() => {\r\n    if (!state.solvedGrid) create()\r\n  }, [create, state.solvedGrid])\r\n\r\n  return (\r\n    <Container data-cy=\"grid-container\">\r\n      {Children.toArray(\r\n        [...Array(9)].map((_, rowIndex) => (\r\n          <Row data-cy=\"grid-row-container\">\r\n            {Children.toArray(\r\n              [...Array(9)].map((_, colIndex) => (\r\n                <Block\r\n                  colIndex={colIndex as INDEX}\r\n                  rowIndex={rowIndex as INDEX}\r\n                />\r\n              ))\r\n            )}\r\n          </Row>\r\n        ))\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Grid\r\n","import React, { FC, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Action, Dispatch } from 'redux'\r\n\r\nimport { Button } from 'components'\r\nimport { createGrid } from 'reducers'\r\n\r\nconst NewButton: FC = () => {\r\n  const dispatch = useDispatch<Dispatch<Action>>()\r\n\r\n  const createNewGrid = useCallback(() => {\r\n    if (window.confirm('Are you sure you want to start a new game?'))\r\n      dispatch(createGrid())\r\n  }, [dispatch])\r\n\r\n  return <Button onClick={createNewGrid}>New Game</Button>\r\n}\r\n\r\nexport default NewButton\r\n","import React, { FC, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AnyAction, Dispatch } from 'redux'\r\n\r\nimport { Button } from 'components'\r\nimport { fillBlock, IReducer } from 'reducers'\r\nimport { BLOCK_COORDS, N, NUMBERS } from 'typings'\r\n\r\ninterface IProps {\r\n  value: NUMBERS\r\n}\r\n\r\ninterface IState {\r\n  selectedBlock?: BLOCK_COORDS\r\n  selectedValue: N\r\n}\r\n\r\nconst NumberButton: FC<IProps> = ({ value }) => {\r\n  const state = useSelector<IReducer, IState>(\r\n    ({ selectedBlock, workingGrid }) => ({\r\n      selectedBlock,\r\n      selectedValue:\r\n        workingGrid && selectedBlock\r\n          ? workingGrid[selectedBlock[0]][selectedBlock[1]]\r\n          : 0,\r\n    })\r\n  )\r\n  const dispatch = useDispatch<Dispatch<AnyAction>>()\r\n\r\n  const fill = useCallback(() => {\r\n    if (state.selectedBlock && state.selectedValue === 0)\r\n      dispatch(fillBlock(value, state.selectedBlock))\r\n  }, [dispatch, state.selectedBlock, state.selectedValue, value])\r\n\r\n  return <Button onClick={fill}>{value}</Button>\r\n}\r\n\r\nexport default NumberButton\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-flow: row;\r\n`\r\n","import React, { FC } from 'react'\r\n\r\nimport { NUMBERS } from 'typings'\r\n\r\nimport Button from './button'\r\nimport { Container } from './styles'\r\n\r\nconst Numbers: FC = () => (\r\n  <Container>\r\n    {([1, 2, 3, 4, 5, 6, 7, 8, 9] as NUMBERS[]).map(value => (\r\n      <Button key={value} value={value} />\r\n    ))}\r\n  </Container>\r\n)\r\n\r\nexport default Numbers\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const Button = styled.button`\r\n  ${({ theme }) => css`\r\n    align-items: center;\r\n    background-color: ${theme.colors.black};\r\n    border: 2px solid ${theme.colors.black};\r\n    border-radius: 4px;\r\n    color: ${theme.colors.white};\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex: 1;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    height: 40px;\r\n    justify-content: center;\r\n    margin: 4px 2px;\r\n    min-height: 40px;\r\n    opacity: 0.9;\r\n    padding: 0;\r\n    transition: ${theme.transition};\r\n\r\n    &:focus {\r\n      border-color: ${theme.colors.blue};\r\n      outline: none;\r\n    }\r\n\r\n    &:hover {\r\n      opacity: 0.6;\r\n    }\r\n  `}\r\n`\r\n","import styled, { css } from 'styled-components'\n\nexport const Card = styled.div`\n  ${({ theme }) => css`\n    background-color: ${theme.colors.white};\n    border-radius: 15px;\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    max-height: fit-content;\n    padding: 15px;\n  `}\n`\n","import styled from 'styled-components'\n\nexport const Content = styled.div`\n  max-width: 60vh;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  margin: 20vh 0;\n  padding: 1rem;\n  background-size: contain;\n  \n`\n","import styled, { css } from 'styled-components'\n\nexport const Title = styled.h1`\n  ${({ theme }) => css`\n    color: ${theme.colors.white};\n    margin-top: 0;\n    text-align: center;\n  `}\n`\n","import { createStore } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { devToolsEnhancer } from 'redux-devtools-extension'\r\n\r\nimport reducer from 'reducers'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\nfunction configureStore() {\r\n  const store = createStore(persistedReducer, devToolsEnhancer({}))\r\n  const persistor = persistStore(store)\r\n  return { persistor, store }\r\n}\r\n\r\nexport default configureStore\r\n","import { createGlobalStyle, css } from 'styled-components'\n\nexport default createGlobalStyle`\n  ${({ theme }) => css`\n    html {\n      height: 100%;\n\n      body {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        margin: 0;\n\n        #root {\n          background: ${theme.colors.background};\n          color: ${theme.colors.black};\n          display: flex;\n          font-family: sans-serif;\n          height: 100%;\n          justify-content: center;\n          padding: 15px;\n        }\n      }\n    }\n  `}\n`\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { ThemeProvider } from 'styled-components'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { Card, Content, Grid, NewButton, Numbers, Title } from 'components'\nimport { configureStore } from 'core'\nimport { GlobalStyles, theme } from 'styles'\n\nconst { persistor, store } = configureStore()\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <GlobalStyles />\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Content data-cy=\"content\">\n          <Title data-cy=\"title\">Sudoku</Title>\n          <Card data-cy=\"card\">\n            <NewButton />\n            <Grid />\n            <Numbers />\n          </Card>\n        </Content>\n      </PersistGate>\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n\nserviceWorkerRegistration.unregister();","// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  colors: {\n    background: 'radial-gradient(circle, rgba(34,135,195,1) 17%, rgba(138,212,176,1) 100%) center fixed',\n    black: '#282c34',\n    blue: '#a0e9fd',\n    lightBlue: '#caf3fe',\n    white: 'white',\n  },\n  transition: '0.3s',\n\n}\n\n","export const CREATE_GRID = 'CREATE_GRID'\r\nexport const FILL_BLOCK = 'FILL_BLOCK'\r\nexport const SELECT_BLOCK = 'SELECT_BLOCK'\r\n"],"sourceRoot":""}